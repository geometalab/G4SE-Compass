variables:
  POSTGRES_DB: G4SE
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  DATABASE_URL: postgres://postgres:postgres@geometalab__g4se-api-db:5432/G4SE
  ELASTIC_SEARCH_URL: http://elasticsearch:9200/
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"

cache:
  paths:
    - "$CI_PROJECT_DIR/pip-cache"
  key: "$CI_PROJECT_ID"

stages:
#- unit tests
#- integration tests
- integration and unit tests
- build staging images
#- deploy to staging
- expectation tests
- build production images
#- deploy to production

integration and unit tests:
  stage: integration and unit tests
  image: python:latest
  script:
  - pip install -U pip setuptools
  - pip install -r compass-api/dev-requirements.txt
  - cd compass-api/G4SE/
  - py.test
  services:
  - geometalab/g4se-api-db:latest
  - elasticsearch:1

build staging images:
  image: geometalab/docker-builder
  stage: build staging images
  script:
  - cd compass-frontend
  - npm install
  - rm -rf dist && ng build -prod
  - cd ..
  - export BUILD_VERSION=${CI_BUILD_REF_NAME:-staging}
  - docker-compose build
  - docker login -u $DOCKERHUB_LOGIN_USERNAME -p $DOCKERHUB_LOGIN_PASSWORD
  - docker-compose push

expectation tests:
  stage: expectation tests
  image: python:latest
  script:
  - pip install -U pip setuptools
  - cd expectation_tests
  - pip install -r requirements.txt
  - py.test --host https://search.g4se.hixi.ch

build production images:
  image: geometalab/docker-builder
  stage: build production images
  script:
  - cd compass-frontend
  - npm install
  - rm -rf dist && ng build -prod
  - cd ..
  - export BUILD_VERSION=latest
  - docker-compose build
  - docker login -u $DOCKERHUB_LOGIN_USERNAME -p $DOCKERHUB_LOGIN_PASSWORD
  - docker-compose push
