version: '2'
services:
  elasticsearch:
    image: elasticsearch:1
    ports:
      - "9200:9200"
  redis:
    image: redis
    ports:
      - "6379:6379"
  api:
    build:
      context: ./compass-api
      dockerfile: Dockerfile
    image: geometalab/g4se-api
    links:
      - "elasticsearch"
      - "redis"
    ports:
      - "8000:8000"
    volumes:
      - api-static:/var/www/g4se-api/static
    environment:
      - DJANGO_SETTINGS_MODULE=G4SE.dev_settings
      - DATABASE_URL=postgres://postgres:postgres@database:5432/G4SE
      - SECRET_KEY=secret_key
      - DEBUG=True
      - STATIC_ROOT=/var/www/g4se-api/static/
      - STATIC_URL=/api/static/
      - ALLOWED_HOSTS=['*']
    links:
      - db:database
  celery:
    build:
      context: ./compass-api
      dockerfile: Dockerfile
    image: geometalab/g4se-api
    links:
      - "elasticsearch"
      - "redis"
    volumes:
      - api-static:/var/www/g4se-api/static
    command: celery -A  G4SE worker -l info
    environment:
      - DJANGO_SETTINGS_MODULE=G4SE.dev_settings
      - DATABASE_URL=postgres://postgres:postgres@database:5432/G4SE
      - SECRET_KEY=secret_key
      - DEBUG=True
      - STATIC_ROOT=/var/www/g4se-api/static/
      - STATIC_URL=/api/static/
      - ALLOWED_HOSTS=['*']
    links:
      - db:database
  harvester:
    image: geometalab/g4se-harvester
    build:
      context: ./compass-harvester
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@database:5432/G4SE
      - FILESHARE_URL=https://geodata4edu.ethz.ch/metadata/
    links:
      - db:database
  db:
    image: geometalab/g4se-api-db
    build:
      context: ./compass-api
      dockerfile: Dockerfile.database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=G4SE
  frontend:
    image: geometalab/g4se-frontend
    build:
      context: ./compass-frontend2/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
  nginx:
    image: geometalab/g4se-nginx
    ports:
      - "8080:80"
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    depends_on:
      - api
      - frontend
    links:
      - api
      - frontend
    volumes:
      - api-static:/var/www/g4se-api/static
    environment:
      - VIRTUAL_HOST=localhost,127.0.0.1
volumes:
  api-static: {}
